ext {
    // App版本号与版本代码
    appCompileSdkVersion = Integer.parseInt(COMPILE_SDK_VERSION as String)
    appBuildToolsVersion = BUILD_TOOLS_VERSION

    appDefaultConfig = {
        applicationId PACKAGE_NAME
        minSdkVersion Integer.parseInt(MIN_SDK_VERSION as String)
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION as String)
        versionCode Integer.parseInt(VERSION_CODE as String)
        versionName VERSION_NAME

    }

    applicationAndroid = {

        dataBinding {
            enabled = true
        }

        signingConfigs {
            myConfig {
                storeFile file(STORE_FILE)
                storePassword STORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            }
        }
        compileSdkVersion appCompileSdkVersion
        buildToolsVersion appBuildToolsVersion
        lintOptions {
            abortOnError false

        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        defaultConfig appDefaultConfig
        //jniLibs--so文件处理
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
                aidl.srcDirs = ['src/main/java']
            }

            main.java.srcDirs += 'src/main/kotlin'
        }

        splits {
            abi {
                enable true
                reset()
                include /*'x86', 'x86_64',*/ 'armeabi-v7a'/*, 'armeabi'*/
                universalApk false

            }

        }

        project.archivesBaseName = project.archivesBaseName + "-code-" + defaultConfig.versionCode + "-ver-" + defaultConfig.versionName;
        buildTypes {
            release {
                minifyEnabled false
                shrinkResources false
                zipAlignEnabled true
                multiDexEnabled true
                signingConfig signingConfigs.myConfig
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg', 'proguard-rules.pro'

            }
            debug {
                // 移除无用的resource文件
                shrinkResources false
                zipAlignEnabled true
                multiDexEnabled true
                signingConfig signingConfigs.myConfig
            }
        }
        packagingOptions {
            //android 错误 Error:duplicate files during packaging of APK app/build/output/apk
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/dependencies.txt'
            exclude 'META-INF/LGPL2.1'
        }

        flavorDimensions "environment"
        productFlavors {
            Dev {
                buildConfigField "String", "SERVER_HOST", "\"$SERVER_HOST_DEV\""
            }
            Test {
                buildConfigField "String", "SERVER_HOST", "\"$SERVER_HOST_TEST\""
            }
            Prod {
                buildConfigField "String", "SERVER_HOST", "\"$SERVER_HOST_PROD\""
            }
        }

    }

    libraryAndroid = {
        compileSdkVersion appCompileSdkVersion
        buildToolsVersion appBuildToolsVersion

        lintOptions {
            abortOnError false

        }


        defaultConfig {
            minSdkVersion Integer.parseInt(MIN_SDK_VERSION as String)
            targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION as String)
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }

        //jniLibs--so文件处理
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
                aidl.srcDirs = ['src/main/java']
            }
        }

    }

    eclipseSourceSets = {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src', 'src-generator']
            resources.srcDirs = ['src', 'src-generator']
            aidl.srcDirs = ['src', 'src-generator']
            renderscript.srcDirs = ['src', 'src-generator']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    mydependencies = {

    }

}

